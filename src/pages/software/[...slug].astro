---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import BigButton from "@components/BigButton.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";

export async function getStaticPaths() {
  const softwares = (await getCollection("software"))
    .filter(software => !software.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return softwares.map((software) => ({
    params: { slug: software.slug },
    props: software,
  }));
}
type Props = CollectionEntry<"software">;

const software = Astro.props;
const { Content } = await software.render();
---

<PageLayout title={software.data.title} description={software.data.description}>
  <Container>
    <div class="animate">
	  <BackToPrev href="/creations/software">
		Back to software
	  </BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={software.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(software.body)}
        </div>
      </div>
      <div class="animate text-2xl font-semibold text-black dark:text-white">
        {software.data.title}
      </div>
    </div>
	<span>
	  { software.data.demoURL && <BigButton href=`${software.data.demoURL}`> &emsp;Live Demo</BigButton> }
	  { software.data.repoURL && <BigButton href=`${software.data.repoURL}`> &emsp;Git Repo</BigButton> }
	</span>
    <article class="animate">
      <Content />
    </article>
  </Container>
</PageLayout>

